{"version":3,"sources":["assets/Pikachu.png","actions/action.js","components/Post/Post.js","components/Post/Feed.js","components/Home.js","components/NavBar.js","components/Login-Signup/Login.js","components/Login-Signup/Signup.js","components/Profile/UserPost.js","components/Profile/FolloweringCard.js","components/Profile/FollowerPage.js","components/Profile/FollowingPage.js","components/Profile/Profile.js","components/Post/AddPost.js","components/Follow Page/FollowCard.js","components/Follow Page/FollowPage.js","App.js","serviceWorker.js","reducers/LogReducer.js","index.js"],"names":["module","exports","login","userId","userName","type","Post","state","likes","props","post","isLiked","showPost","isUser","handleLike","postId","data","Axios","withCredentials","then","res","status","setState","new","alert","logoutUser","history","push","pathname","catch","err","console","log","handleDelete","get","this","_id","likeButton","className","deleteButton","onClick","postBody","key","src","img","to","createdAt","slice","body","userID","Component","connect","isLoggedIn","dispatch","loginUser","Feed","posts","message","length","postCards","map","Home","userEmail","style","width","height","withRouter","Buttons","window","location","reload","handleLogout","id","Login","email","password","handleChange","e","target","value","handleSubmit","preventDefault","userData","response","onSubmit","htmlFor","onChange","required","Signup","confirmPassword","followers","following","followersCount","followingCount","UserPost","thisPageUserId","feed","FolloweringCard","buttonText","isDisable","handleFollowUnFollow","followUserId","user","followUserName","unFollowUserId","unFollowUserName","path","isFollowing","disabled","FollowerPage","followerUsers","list","FollowingPage","followingUsers","Profile","thisPageUserName","thisPageEmail","isThisUser","followersButton","followingButton","showPostButton","getData","handleEdit","handleFollowers","handleFollowing","editButton","followersList","followingList","postList","AddPost","handleBody","handlePost","likedUserIds","data-length","FollowCard","Follow","users","padding","App","exact","component","FollowPage","Boolean","hostname","match","iniState","userNAme","logReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0290c39c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pikachu.e5e40294.png\";","export const login = (userId, userName) => {\r\n    return {\r\n        type: 'LOGGED_IN',\r\n        userId: userId,\r\n        userName: userName,\r\n    };\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: 'LOGGED_OUT'\r\n    };\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\nimport img from '../../assets/Pikachu.png'\r\nimport './Post.css'\r\n\r\nclass Post extends Component {\r\n    state = {\r\n        likes: this.props.post.likes,\r\n        userName: this.props.userName,\r\n        userId: this.props.userId,\r\n        isLiked: false,\r\n        showPost: false,\r\n        isUser: false,\r\n    }\r\n    componentDidMount() {\r\n        const postId = this.props.post._id;\r\n        Axios.get(`http://localhost:5000/postLike/${postId}`, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 201);\r\n                else {\r\n                    if(res.data.isLiked) {\r\n                        this.setState({\r\n                            isLiked: true,\r\n                        });\r\n                    }\r\n                    if(res.data.isUser){\r\n                        this.setState({\r\n                            isUser: true,\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        showPost: true,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleLike = (postId, userId) => {\r\n        const data = {\r\n            postId,\r\n            userId: this.props.userId,\r\n            isLiked: this.state.isLiked,\r\n        }\r\n        Axios.post('http://localhost:5000/post/like', data, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 200) {\r\n                    this.setState({\r\n                        likes: res.data.new,\r\n                        isLiked: res.data.isLiked,\r\n                    })\r\n                } else if(res.status === 203) {\r\n                    alert(\"Post Not Available!\")\r\n                } else {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } \r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleDelete = (postId) => {\r\n        Axios.get(`http://localhost:5000/post/delete/${postId}`, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if (res.status === 200) {\r\n                    this.setState({\r\n                        showPost: false,\r\n                    })\r\n                    alert('Post Deleted!');\r\n                } else {\r\n                    alert('Please Login to delete post!')\r\n                    this.props.history.push({\r\n                        pathname: `/login`\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const post = this.props.post;\r\n        const likeButton = this.state.isLiked ? (\r\n            <i className=\"fas fa-heart\"></i>\r\n        ) : (\r\n            <i className=\"far fa-heart\"></i>\r\n        );\r\n        const deleteButton = this.state.isUser ? (\r\n            <button onClick={() => this.handleDelete(post._id)} className=\"right waves-effect waves-light btn-small\">Delete</button>\r\n        ) : (\r\n            <div></div>\r\n        );\r\n        const postBody = this.state.showPost ? (\r\n                    <div className=\"post card postcard\" key={post._id}>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col s2\">\r\n                                    <img src={img} />\r\n                                </div>\r\n                                <div className=\"col s10\">\r\n                                    <span className=\"card-title\"><Link to={{ pathname: `/profile/${post.userId}` }}>{post.userName}</Link></span>\r\n                                    <div className=\"row\"><div className=\"col s12\"><p className=\"right\">{post.createdAt.slice(0, 19)}</p></div></div>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"row post-body\"><p>{post.body}</p></div>\r\n                            <hr></hr>\r\n                            <button onClick={() => this.handleLike(post._id, this.state.userID)} className=\"waves-effect waves-light btn-small\">{this.state.likes}  {likeButton}</button>\r\n                            {deleteButton}\r\n                        </div>\r\n                    </div>\r\n        ) : (\r\n            <div></div>\r\n        );\r\n        return (\r\n            <div>\r\n                { postBody }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n        userName: state.userName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport Post from './Post'\r\n\r\nclass Feed extends Component {\r\n    state = {\r\n        posts: [],\r\n        userName: this.props.userName,\r\n        userId: this.props.userId,\r\n        message: 'Loading...'\r\n    }\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:5000/feed', {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        posts: res.data,\r\n                    })\r\n                    if(this.state.posts.length === 0) {\r\n                        this.setState({\r\n                            message: 'No Posts to show!',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const posts = this.state.posts;\r\n        const postCards = posts.length ? (\r\n            posts.map((post) => {\r\n                return (\r\n                        <Post post={post} key={post._id} userName={this.state.userName} userId={this.state.userId} />\r\n                    )\r\n                })\r\n            ) : (\r\n                <h4>{ this.state.message }</h4>\r\n            );\r\n    \r\n        return(\r\n            <div className=\"\">\r\n                {postCards}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../actions/action'\r\nimport Feed from './Post/Feed'\r\nimport './Home.css'\r\nimport img from '../assets/Pikachu.png'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        userId: this.props.userId,\r\n        userEmail: '',\r\n        userName: this.props.userName,\r\n        isLoggedIn: true,\r\n    }\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:5000/checkuser', {withCredentials: true})\r\n            .then(res => {\r\n                const isLoggedIn = res.data.isLoggedIn;\r\n                this.setState({\r\n                    isLoggedIn,\r\n                    userId: res.data.userId,\r\n                    userEmail: res.data.userEmail,\r\n                    userName: res.data.userName,\r\n                })\r\n                if(isLoggedIn) {\r\n                    this.props.loginUser(res.data.userId, res.data.userName);\r\n                } else {\r\n                    this.props.logoutUser();\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render () {\r\n        const body = this.state.isLoggedIn ? (\r\n            <div className=\"home\">\r\n                <h1 className=\"center\">Welcome to SocioPage!</h1>\r\n                <div className=\"row\">\r\n                \r\n                    <div className=\"col l3 m7 s12\">\r\n                        <div className=\"card profilecard\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col l6 m6 s6\">\r\n                                    <img src={img} style={{width: 100+'%', height: 100+'%', }}></img>\r\n                                </div>\r\n                                <div className=\"col l6 m6 s6\">\r\n                                    <h4><Link to={{ pathname: `/profile/${this.state.userId}` }}>{this.state.userName}</Link></h4>\r\n                                    <p>{this.state.userEmail}</p>\r\n                                    <Link to='/addpost'><button className=\"btn-floating btn-large waves-effect waves-light red\"><i className=\"material-icons\">add</i></button></Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"col l6 m12 s12\">\r\n                        <Feed userId={this.state.userId} userName={this.state.userName} />\r\n                    </div>\r\n\r\n                    <div className=\"col l3 m5 s12\">\r\n                        <h4>Search</h4>\r\n                        <div className=\"card\">\r\n                            <p>aaa</p>\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <h2>Please Login/Signup to view the posts!</h2>\r\n        );\r\n        return(\r\n            <div>\r\n                {body}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n        userName: state.userName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../actions/action'\r\n\r\nconst handleLogout = (props) => {\r\n        Axios.get('http://localhost:5000/logout', {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 200) {\r\n                    alert(\"Successfully Logged Out!\");\r\n                    props.logoutUser();\r\n                    props.history.push({\r\n                        pathname: `/login`\r\n                    });\r\n                } else {\r\n                    alert(\"Something went wrong!\");\r\n                    window.location.reload(true);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\nfunction NavBar (props) {\r\n    const Buttons = props.isLoggedIn ? (\r\n            <div>\r\n                <li><Link to=\"/addpost\">Add Post!</Link></li>\r\n                <li><Link to=\"/followpage\">Follow</Link></li>\r\n                <li><Link to={{ pathname: `/profile/${props.userId}` }}>Profile</Link></li>\r\n                <li><a onClick={() => handleLogout(props)}>Logout</a></li>\r\n            </div>\r\n    ) : (\r\n        <div>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n            <li><Link to=\"/signup\">Signup</Link></li>\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to=\"/\" className=\"brand-logo\">SocioPage</Link>\r\n                    <ul id=\"nav-mobile\" className=\"right\">\r\n                        {Buttons}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n    componentDidMount() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        if(isLoggedIn) {\r\n            const userId = this.props.userId;\r\n            this.props.history.push({\r\n                pathname: `/profile/${userId}`\r\n            });\r\n        } else {\r\n            Axios.get('http://localhost:5000/checkuser', {withCredentials: true})\r\n            .then(res => {\r\n                if(res.data.isLoggedIn) {\r\n                    this.props.loginUser(res.data.userId, res.data.userName);\r\n                    this.props.history.push({\r\n                        pathname: `/profile/${res.data.userId}`,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        }\r\n        Axios.post(' http://localhost:5000/login', userData, {withCredentials: true})\r\n            .then(response => {\r\n                if(response.status === 203) {\r\n                    alert(\"Some error occured. Please refresh the page.\");\r\n                    window.location.reload(true);\r\n                } else if(response.status === 202) {\r\n                    alert(\"Input Data Incorrect!\");\r\n                    window.location.reload(true); \r\n                } else if(response.status === 200) {\r\n                    const userId = response.data.userId;\r\n                    const userName = response.data.userName;\r\n                    this.props.loginUser(userId, userName);\r\n                    this.props.history.push({\r\n                        pathname: `/profile/${userId}`\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"center\">Login</h1>\r\n                <div className=\"col s4\">\r\n                    <form  onSubmit={this.handleSubmit}>\r\n                    <div className=\"container\">\r\n                        <div className=\"input-field col s4\">\r\n                            <label htmlFor=\"email\">Email: </label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange} required></input>\r\n                        </div></div>\r\n                        <div className=\"container\">\r\n                        <div className=\"input-field col s4\">\r\n                            <label htmlFor=\"password\">Password: </label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} required></input>\r\n                        </div></div>\r\n                        <div className=\"container center\">\r\n                        <button className=\"waves-effect waves-light btn\">Login</button></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react'\r\nimport Axios from 'axios'\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        email: \"\",\r\n        userName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    }\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:5000/checkuser', {withCredentials: true})\r\n            .then(res => {\r\n                if(res.data.isLoggedIn) {\r\n                    this.props.loginUser(res.data.userId, res.data.userName);\r\n                    this.props.history.push({\r\n                        pathname: `/profile/${res.data.userId}`,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let userData = {\r\n            email: this.state.email,\r\n            userName: this.state.userName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            followers: [],\r\n            following: [],\r\n            followersCount: 0,\r\n            followingCount: 0,\r\n        }\r\n        Axios.post('http://localhost:5000/signup', userData, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 201) {\r\n                    alert(\"User Already LoggedIn. Redirecting to Profile.\")\r\n                    this.props.history.push({\r\n                        pathname: `/profile/${res.data.userId}`,\r\n                    })\r\n                } else if(res.data === 'Successfull Signup!') {\r\n                    this.props.history.push('/');\r\n                } else {\r\n                    alert(res.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n            \r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"center\">Signup</h1>\r\n                <form className=\"col s4 center\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"container\">\r\n                        <div className=\"input-field col s4\">\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"validate\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                    <div className=\"input-field col s4\">\r\n                        <label htmlFor=\"userName\">User Name: </label>\r\n                        <input type=\"text\" id=\"userName\" onChange={this.handleChange} className=\"validate\" required />\r\n                    </div></div>\r\n                    <div className=\"container\">\r\n                    <div className=\"input-field col s4\">\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} className=\"validate\" required />\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                    </div></div>\r\n                    <div className=\"container\">\r\n                    <div className=\"input-field col s4\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password: </label>\r\n                        <input type=\"password\" id=\"confirmPassword\" onChange={this.handleChange} className=\"validate\" required />\r\n                    </div></div>\r\n                    <div className=\"container center\">\r\n                    <button className=\"waves-effect waves-light btn\">Signup</button></div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport Post from '../Post/Post'\r\n\r\nclass UserPost extends Component {\r\n    state = {\r\n        userId: this.props.userId,\r\n        userName: this.props.userName,\r\n        thisPageUserId: this.props.thisPageUserId,\r\n        posts: [],\r\n        isLoggedIn: true,\r\n        message: 'Loading...',\r\n    }\r\n    componentDidMount() {\r\n        Axios.get(`http://localhost:5000/post/${this.state.thisPageUserId}`, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if (res.status === 200) {\r\n                    this.setState({\r\n                        posts: res.data,\r\n                    })\r\n                    if(this.state.posts.length === 0) {\r\n                        this.setState({\r\n                            message: 'No Posts',\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        isLoggedIn: false,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const posts = this.state.posts;\r\n        const body = posts.length ? (\r\n            posts.map(post => {\r\n                return (\r\n                    <Post post={post} key={post._id} userName={this.state.userName} userId={this.state.userId} />\r\n                )\r\n            })\r\n        ) : (\r\n            <h4 className=\"center\">{this.state.message}</h4>\r\n        );\r\n        const feed = this.state.isLoggedIn  ? (\r\n            <div>\r\n                <h3 className=\"center\">Your Posts</h3>\r\n                <div className=\"container\">{body}</div>\r\n            </div>\r\n        ) : (\r\n            <div><h4 className=\"center\">Please Login!</h4></div>\r\n        );\r\n        return (\r\n            <div>{feed}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.userId,\r\n        userName: state.userName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPost);","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport img from '../../assets/Pikachu.png'\r\nimport './FolloweringCard.css'\r\n\r\nclass FolloweringCard extends Component {\r\n    state = {\r\n        buttonText: 'Wait...',\r\n        isDisable: true,\r\n    }\r\n    componentDidMount() {\r\n        let path = this.props.user.userId;\r\n        Axios.get(`http://localhost:5000/checkfollowstatus/${path}`, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if(path === this.props.userId) {\r\n                    this.setState({\r\n                        buttonText: 'Follow',\r\n                        isDisable: true,\r\n                    })\r\n                } else if(res.data.isFollowing) {\r\n                    this.setState({\r\n                        buttonText: 'Following',\r\n                        isDisable: false,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        buttonText: 'Follow',\r\n                        isDisable: false,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleFollowUnFollow = () => {\r\n        this.setState({\r\n            isDisable: true,\r\n        })\r\n        if(this.state.buttonText === 'Follow') {\r\n            const data = {\r\n                followUserId: this.props.user.userId,\r\n                followUserName: this.props.user.userName,\r\n            }\r\n            Axios.post('http://localhost:5000/follow', data, {withCredentials: true})\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        this.setState({\r\n                            buttonText: 'Following',\r\n                            isDisable: false,\r\n                        })\r\n                    } else {\r\n                        alert('You are not LoggedIn!');\r\n                        this.props.history.push({\r\n                            pathname: `/login`,\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        } else {\r\n            const data = {\r\n                unFollowUserId: this.props.user.userId,\r\n                unFollowUserName: this.props.user.userName,\r\n            };\r\n            Axios.post('http://localhost:5000/unfollow', data, {withCredentials: true})\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        this.setState({\r\n                            buttonText: 'Follow',\r\n                            isDisable: false,\r\n                        })\r\n                    } else {\r\n                        alert(\"You are not LoggedIn!\")\r\n                        this.props.history.push({\r\n                            pathname: `/login`,\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n    render() {\r\n        const user = this.props.user;\r\n        return (\r\n            <div className=\"post card followeringCard\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col l4 m4 s12\">\r\n                            <div className=\"image\">\r\n                                <img src={img}></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col l8 m8 s12\">\r\n                            <Link to={{ pathname: `/profile/${this.props.user.userId}` }}><span className=\"card-title\">{user.userName}</span></Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-container\">\r\n                        <button onClick={this.handleFollowUnFollow} disabled={this.state.isDisable} className=\"waves-effect waves-light btn-small\">{this.state.buttonText}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FolloweringCard;","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\nimport FolloweringCard from './FolloweringCard'\r\n\r\nclass FollowerPage extends Component {\r\n    state = {\r\n        followerUsers: [], \r\n        thisPageUserId: this.props.thisPageUserId,\r\n        userId: this.props.userId,\r\n        userName: this.props.userName,\r\n        isLoggedIn: true,\r\n        message: 'Loading...'\r\n    }\r\n    componentDidMount() {\r\n        let path = this.state.thisPageUserId;\r\n        Axios.get(`http://localhost:5000/follower/${path}`, { withCredentials: true })\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    this.props.logoutUser();\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if(res.status === 200) {\r\n                    this.setState({\r\n                        followerUsers: res.data.followerUsers,\r\n                        isLoggedIn: true,\r\n                    });\r\n                    if(this.state.followerUsers.length === 0) {\r\n                        this.setState({\r\n                            message: 'No Followers',\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const followerUsers = this.state.followerUsers;\r\n        const list = followerUsers.length ? (\r\n            followerUsers.map((user) => {\r\n                return (\r\n                    <div className=\"col xl6 l12 m6 s12\">\r\n                        <FolloweringCard user={user} key={user.userId} userId={this.state.userId}/>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <div><h4>{this.state.message}</h4></div>\r\n        );\r\n        const body = this.state.isLoggedIn ? (\r\n            <div>{list}</div>\r\n        ) : (\r\n            <div><h4>Please Login/Signup to view people!</h4></div>\r\n        );\r\n        return (\r\n            <div>\r\n                <h4 className=\"center\">Followers {this.state.userName}</h4>\r\n                    <div className=\"row\">{body}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n        userName: state.userName,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowerPage);\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\nimport FolloweringCard from './FolloweringCard'\r\n\r\nclass FollowingPage extends Component {\r\n    state = {\r\n        followingUsers: [], \r\n        thisPageUserId: this.props.thisPageUserId,\r\n        userId: this.props.userId,\r\n        userName: this.props.userName,\r\n        isLoggedIn: true,\r\n        message: 'Loading...'\r\n    }\r\n    componentDidMount() {\r\n        let path = this.state.thisPageUserId;\r\n        Axios.get(`http://localhost:5000/following/${path}`, { withCredentials: true })\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if(res.status === 200) {\r\n                    this.setState({\r\n                        followingUsers: res.data.followingUsers,\r\n                        isLoggedIn: true,\r\n                    });\r\n                    if(this.state.followingUsers.length === 0) {\r\n                        this.setState({\r\n                            message: 'No Following',\r\n                        });\r\n                    }\r\n                } else {\r\n                    alert(\"Some error occured! Please refresh the page.\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const followingUsers = this.state.followingUsers;\r\n        const list = followingUsers.length ? (\r\n            followingUsers.map((user) => {\r\n                return (\r\n                    <div className=\"col xl6 l12 m6 s12\">\r\n                        <FolloweringCard user={user} key={user.userId} userId={this.state.userId}/>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <div><h4>{this.state.message}</h4></div>\r\n        );\r\n        const body = this.state.isLoggedIn ? (\r\n            <div>{list}</div>\r\n        ) : (\r\n            <div><h4>Please Login/Signup to view people!</h4></div>\r\n        );\r\n        return (\r\n            <div>\r\n                <h4 className=\"center\">Following {this.state.userName}</h4>\r\n                    <div className=\"row\">{body}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n        userName: state.userName,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowingPage);\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\nimport UserPost from './UserPost'\r\nimport FollowerPage from './FollowerPage'\r\nimport FollowingPage from './FollowingPage'\r\nimport './Profile.css'\r\nimport img from '../../assets/Pikachu.png'\r\n\r\nclass Profile extends Component {\r\n    state = {\r\n        userId: '',\r\n        userName: \"\",\r\n        \r\n        thisPageUserId: '',\r\n        thisPageUserName: '',\r\n        thisPageEmail: \"\",\r\n        followersCount: 0,\r\n        followingCount: 0,\r\n\r\n        isThisUser: false,\r\n\r\n        followersButton: false,\r\n        followingButton: false,\r\n        showPostButton: false,\r\n\r\n    }\r\n    getData = () => {\r\n        let path = this.props.history.location.pathname.slice(9);\r\n        Axios.get(`http://localhost:5000/user/${path}`, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if(res.status === 200) {\r\n                    this.setState({\r\n                        userId: res.data.userId,\r\n                        userName: res.data.userName,\r\n                        thisPageUserId: this.props.history.location.pathname.slice(9),\r\n                        thisPageUserName: res.data.thisPageUserName,\r\n                        thisPageEmail: res.data.thisPageEmail,\r\n                        followersCount: res.data.followersCount,\r\n                        followingCount: res.data.followingCount,\r\n                        followersButton: false,\r\n                        followingButton: false,\r\n                        showPostButton: true,\r\n                    })\r\n                    if(this.state.userId === this.state.thisPageUserId) {\r\n                        this.setState({\r\n                            isThisUser: true,\r\n                        })\r\n                        this.props.loginUser(this.state.userId, this.state.userName);\r\n                    } else {\r\n                        this.setState({\r\n                            isThisUser: false,\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.props.history.push({\r\n                        pathname: '/login'\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.state.thisPageUserId !== this.props.history.location.pathname.slice(9)) {\r\n            this.getData();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    handleEdit = () => {\r\n\r\n    }\r\n    handleFollowers = () => {\r\n        if(this.state.followersButton === true) {\r\n            this.setState({\r\n                followersButton: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                followersButton: true,\r\n                followingButton: false,\r\n            })\r\n        }\r\n    }\r\n    handleFollowing = () => {\r\n        if(this.state.followingButton === true) {\r\n            this.setState({\r\n                followingButton: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                followersButton: false,\r\n                followingButton: true,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        \r\n        const thisPageUserId = this.state.thisPageUserId;\r\n        const editButton = this.state.isThisUser ? (\r\n                <div>\r\n                    <button onClick={this.handleEdit} className=\"waves-effect waves-light btn\">Edit</button>\r\n                </div>\r\n        ) : (\r\n                <div></div>\r\n        );\r\n        const followersList = this.state.followersButton ? (\r\n            <div>\r\n                <FollowerPage thisPageUserId={thisPageUserId}/>\r\n            </div>\r\n        ) : (\r\n            <div></div>\r\n        );\r\n        const followingList = this.state.followingButton ? (\r\n            <div>\r\n                <FollowingPage thisPageUserId={thisPageUserId}/>\r\n            </div>\r\n        ) : (\r\n            <div></div>\r\n        );\r\n        const postList = this.state.showPostButton ? (\r\n            <div>\r\n                <UserPost thisPageUserId={thisPageUserId}/>\r\n            </div>\r\n        ) : (\r\n            <div></div>\r\n        );\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"profile\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col l6 m12 s12\">\r\n                            <h3 className=\"center\">Profile</h3>\r\n                            <div className=\"card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col l6 m12 s12\">\r\n                                        <div className=\"profileimage\">\r\n                                            <img src={img}></img>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col l6 m12 s12\">\r\n                                        <div className=\"info\">\r\n                                            <h4>{ this.state.thisPageUserName }</h4>\r\n                                            <h4>{ this.state.thisPageEmail }</h4>\r\n                                            { editButton }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"profile-btn-container\">\r\n                                    <button onClick={this.handleFollowers} className=\"waves-effect waves-light btn\">{this.state.followersCount} Followers</button>\r\n                                    <button onClick={this.handleFollowing} className=\"waves-effect waves-light btn\">{this.state.followingCount} Following</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {followersList}\r\n                            {followingList}\r\n                        </div>\r\n                        <div className=\"col l6 m12 s12\">\r\n                            {postList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Profile);","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\n\r\n\r\nclass AddPost extends Component {\r\n    state = {\r\n        userName: \"\",\r\n        body: \"\",\r\n        likes: 0,\r\n        isLoggedIn: false,\r\n        userId: \"\",\r\n    }\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:5000/checkuser', {withCredentials: true})\r\n            .then(res => {\r\n                const isLoggedIn = res.data.isLoggedIn;\r\n                this.setState({\r\n                    isLoggedIn,\r\n                    userName: res.data.userName,\r\n                    userId: res.data.userId,\r\n                })\r\n                if(isLoggedIn) {\r\n                    this.props.loginUser(res.data.userId, res.data.userName);\r\n                } else {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleBody = (e) => {\r\n        this.setState({\r\n            body: e.target.value,\r\n        })\r\n    }\r\n    handlePost = (e) => {\r\n        e.preventDefault();\r\n        let post = {\r\n            body: this.state.body,\r\n            likes: this.state.likes,\r\n            userName: this.state.userName,\r\n            userId: this.state.userId,\r\n            likedUserIds: [],\r\n        }\r\n        Axios.post('http://localhost:5000/addpost', post, {withCredentials: true})\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n\r\n                } else {\r\n                    this.props.history.push({\r\n                        pathname: '/'\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const body = this.state.isLoggedIn ? (\r\n            <div>\r\n                <h1 className=\"center\">{this.state.userName} you can add your post here!</h1>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <label htmlFor=\"post\">Post: </label>\r\n                        <textarea onChange={this.handleBody} className=\"materialize-textarea\" id=\"post\" data-length=\"120\" required />\r\n                        <button onClick={this.handlePost} className=\"waves-effect waves-light btn\">Post!</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div></div>\r\n        );\r\n        return (\r\n            <div className=\"container\">\r\n                { body }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId, userName) => dispatch(login(userId, userName)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddPost);","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport './FollowCard.css'\r\nimport img from '../../assets/Pikachu.png'\r\n\r\nclass FollowCard extends Component {\r\n    state = {\r\n        buttonText: 'Follow',\r\n        isDisable: false\r\n    }\r\n\r\n    handleFollowUnFollow = () => {\r\n        this.setState({\r\n            isDisable: true,\r\n        })\r\n        if(this.state.buttonText === 'Follow') {\r\n            const data = {\r\n                followUserId: this.props.user._id,\r\n                followUserName: this.props.user.userName,\r\n            }\r\n            Axios.post('http://localhost:5000/follow', data, {withCredentials: true})\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        this.setState({\r\n                            buttonText: 'Following',\r\n                            isDisable: false,\r\n                        })\r\n                    } else {\r\n                        alert(\"You are not LoggedIn!\")\r\n                        this.props.history.push({\r\n                            pathname: `/login`,\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        } else {\r\n            const data = {\r\n                unFollowUserId: this.props.user._id,\r\n                unFollowUserName: this.props.user.userName,\r\n            };\r\n            Axios.post('http://localhost:5000/unfollow', data, {withCredentials: true})\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        this.setState({\r\n                            buttonText: 'Follow',\r\n                            isDisable: false,\r\n                        })\r\n                    } else {\r\n                        alert(\"You are not LoggedIn!\")\r\n                        this.props.history.push({\r\n                            pathname: `/login`,\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        return (\r\n            <div className=\"post card followcard\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col l4 m4 s12\">\r\n                            <img src={img}></img>\r\n                        </div>\r\n                        <div className=\"col l8 m8 s12\">\r\n                            <Link to={{ pathname: `/profile/${this.props.user.userId}` }}><span className=\"card-title\">{user.userName}</span></Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className='btn-container'>\r\n                        <button onClick={this.handleFollowUnFollow} disabled={this.state.isDisable} className=\"waves-effect waves-light btn-small\">{this.state.buttonText}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FollowCard;","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from '../../actions/action'\r\nimport FollowCard from './FollowCard'\r\n\r\nclass Follow extends Component {\r\n    state = {\r\n        users: [], \r\n        userId: this.props.userId,\r\n        userName: this.props.userName,\r\n        isLoggedIn: true,\r\n        message: 'Loading...'\r\n    }\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:5000/followpage', { withCredentials: true })\r\n            .then(res => {\r\n                if(res.status === 207) {\r\n                    this.props.logoutUser();\r\n                    alert(\"You are not LoggedIn!\")\r\n                    this.props.history.push({\r\n                        pathname: `/login`,\r\n                    })\r\n                } else if(res.status === 200) {\r\n                    this.props.loginUser(res.data.userId, res.data.userName);\r\n                    this.setState({\r\n                        users: res.data.users,\r\n                        isLoggedIn: true,\r\n                    });\r\n                    if(this.state.users.length === 0) {\r\n                        this.setState({\r\n                            message: 'No Follow Suggestion!',\r\n                        })\r\n                    }\r\n                } else {\r\n                    alert(\"Some error occured! Please refresh the page.\")\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const users = this.state.users;\r\n        const list = users.length ? (\r\n            users.map((user) => {\r\n                return (\r\n                    <div className=\"col l4 m6 s6\" key={user._id}>\r\n                        <FollowCard user={user} key={user._id} />\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <div><h4>{this.state.message}</h4></div>\r\n        );\r\n        const body = this.state.isLoggedIn ? (\r\n            <div>{list}</div>\r\n        ) : (\r\n            <div><h4>Please Login/Signup to follow people!</h4></div>\r\n        );\r\n        return (\r\n            <div>\r\n                <h4 className=\"center\" style={{padding: 20+'px',}}>Follow Suggestion!</h4>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">{body}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser:(userId) => dispatch(login(userId)),\r\n        logoutUser: () => dispatch(logout()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        userId: state.userId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Follow);\r\n","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nimport Home from './components/Home'\nimport NavBar from './components/NavBar'\nimport Login from './components/Login-Signup/Login'\nimport Signup from './components/Login-Signup/Signup'\nimport Profile from './components/Profile/Profile'\nimport AddPost from './components/Post/AddPost'\nimport FollowPage from './components/Follow Page/FollowPage'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/profile/:userId\" component={Profile} />\n        <Route path=\"/addpost\" component={AddPost} />\n        <Route path='/followpage' component={FollowPage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const iniState = {\r\n    isLoggedIn: false,\r\n    userId: \"\",\r\n    userNAme: \"\",\r\n}\r\n\r\nconst logReducer = (state = iniState, action) => {\r\n    switch(action.type) {\r\n        \r\n        case 'LOGGED_OUT': {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userId: \"\",\r\n                userName: \"\",\r\n            }\r\n        }\r\n        case 'LOGGED_IN': {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userId: action.userId,\r\n                userName: action.userName,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default logReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport logReducer from './reducers/LogReducer.js';\n\nconst store = createStore(logReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}